/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var lsib = ee.FeatureCollection("USDOS/LSIB_SIMPLE/2017"),
    avhrr_ndvi = ee.ImageCollection("NOAA/CDR/AVHRR/NDVI/V5"),
    avhrr_sr = ee.ImageCollection("NOAA/CDR/AVHRR/SR/V5"),
    avhrr_lai = ee.ImageCollection("NOAA/CDR/AVHRR/LAI_FAPAR/V5");
/***** End of imports. If edited, may not auto-convert in the playground. *****/
//**************************************************************************************************
//*** Options for seasonal aggegation ***
//**************************************************************************************************
var country = "Australia"
var start_year = 1983; 
var end_year = 1983;
var start_date=ee.Date.fromYMD(start_year,01,01)
var end_date=ee.Date.fromYMD(end_year+1,01,01)
var months=ee.List([1,4,7,10])
var years=ee.List.sequence(start_year,end_year);
var ic = avhrr_sr; 
var var_name = "NIRV"

// var season_months = ee.List([[12,1,2], [3,4,5], [6,7,8], [9,10,11]])
// print(season_months.get(1))
// print(start_date.advance(-1, 'months'))

// print(months.get(0))
var seasonal_date = ee.Date.fromYMD(start_year, months.get(0), 01)
// print(seasonal_date)
var seasonal_date_range = ee.DateRange(seasonal_date.advance(-1,'months'), 
                                       seasonal_date.advance(1.999,'months'))
// print(seasonal_date_range)

print(ic.filterDate(seasonal_date_range))

//**************************************************************************************************
// FUNCTIONS
//**************************************************************************************************
var getQABits = function(image, start, end, newName) {
    // Compute the bits we need to extract.
    var pattern = 0;
    for (var i = start; i <= end; i++) {
      pattern += Math.pow(2, i);
    }
    var out = image.select([0], [newName])
                  .bitwiseAnd(pattern)
                  .rightShift(start);
    return(image.addBands(out))
};

function qualityFlag(image) {
  var qa = image.select('QA');
  
  // Select bits
  var cloudBitMask = Math.pow(2, 1);
  var shadowBitMask = Math.pow(2, 2);
  var brdfBitMask = Math.pow(2, 14);
  var ch_1_5_BitMask = Math.pow(2, 7);
  
  // 
  var mask = qa.bitwiseAnd(cloudBitMask).eq(0)
            .and(
              qa.bitwiseAnd(shadowBitMask).eq(0))
              // .and(
              // qa.bitwiseAnd(ch_1_5_BitMask).eq(0));
  // var mask_2 = qa.bitwiseAnd(ch_1_5_BitMask).neq(0)
  image = image.updateMask(mask);
  // image = image.updateMask(mask_2); 
  // image = image.updateMask(brdfBitMask.eq(0))

  // Return the masked data.
  return(image); 
  // return(qa.bitwiseAnd(brdfBitMask).eq(0));
}

function calcEVI2_avhrr(img){
  // var ndvi1999 = landsat1999.select('B4').subtract(landsat1999.select('B3'))
  //             .divide(landsat1999.select('B4').add(landsat1999.select('B3')));

  // EVI2=2.5*((NIR-Red)/(NIR+2.4*Red+1))
  // var time = img.select('constant');
  img = img.select(['SREFL_CH1','SREFL_CH2'],['Red','NIR'])
            .multiply(0.0001);
  var out = img.select('NIR').subtract(img.select('Red')).multiply(2.5)
    .divide(img.select('NIR').add(img.select('Red').multiply(2.4)).add(1))
  return(out.select(['NIR'],['EVI2']))
}

function calc_nirv_avhrr(img){
  var b = img.select(['SREFL_CH1','SREFL_CH2'],['Red','NIR'])
            .multiply(0.0001);
  var nirv = b.normalizedDifference(['NIR','Red']).multiply(b.select('NIR'))
              .rename("NIRV")
  return(nirv)
}


//******************************************************************
// MAIN
//******************************************************************
// var roi = lsib.filterMetadata("country_na","equals",country)
//               .first()
//               .geometry()
//               .bounds()

var roi = ee.Geometry.Rectangle([140, -40, 154, -28])
roi = roi.buffer(50000)

// var tmp = cdr.filterDate('2010-01-01','2010-02-01')
//             .map(qualityFlag)
//             // .map(calcEVI2_avhrr)
//             // .mean()
//             // .clip(roi)
// Map.addLayer(tmp.first())

var tmp = ee.ImageCollection.fromImages(
  years.map(function(y){    // --- YEARS ---  //
  
  return months.map(function(m){   // --- MONTHS --- //
   var seasonal_date = ee.Date.fromYMD(y, m, 01)
   var seasonal_date_range = ee.DateRange(seasonal_date.advance(-1,'months'), 
                                       seasonal_date.advance(1.999,'months'))
    return ic.filterDate(seasonal_date_range)
            // .filter(ee.Filter.calendarRange(y, y, 'year'))
            // .filter(ee.Filter.calendarRange(m, m, 'month'))
            .map(qualityFlag)
            .map(calc_nirv_avhrr)
            // .map(function(i){
            //   var out2 = i.select("NDVI").multiply(0.0001)
            //   return(out2); 
            // })
            .mean()
            .clip(roi)
            .set('year',y)
            .set('month',m)
            .set('day', 1)
            .set('system:time_start', ee.Date.fromYMD(y, m, 1));
            }) // END MONTHS SECTION
          }).flatten() // END YEARS SECTION
        )

var multiband = ee.Image().select()
var multiband = ee.Image(tmp.iterate(function(image, result) {
  return ee.Image(result).addBands(image)
}, multiband))

// Map.addLayer(tmp, {min:0, max:8, palette:['#7d6c31','green'],bands:["LAI"]})
Map.addLayer(multiband, {bands:['NIRV'], min:0, max:0.3, 
  palette:['black','purple','red','orange','yellow']}, false); 
// Map.addLayer(roi)

// Export.image.toDrive(
//   // image, description, folder, fileNamePrefix, dimensions, region, scale, crs, crsTransform, maxPixels, shardSize, fileDimensions, skipEmptyTiles, fileFormat, formatOptions
//   {image:multiband, 
//   description:var_name+"_"+start_year+"_"+end_year,
//   folder:"AVHRR_NDVI_CDR_V5", 
//   fileNamePrefix:"AVHRR_NDVI_monmean_"+"SEAUS_buffer"+"_"+start_year+"_"+end_year,
//   region:roi,
//   scale:5000,
//   crs:"EPSG:4326", 
//   maxPixels:15000000
//   })
