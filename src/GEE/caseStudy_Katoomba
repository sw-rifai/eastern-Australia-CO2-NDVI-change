/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var l8 = ee.ImageCollection("LANDSAT/LC08/C01/T1_SR"),
    s2 = ee.ImageCollection("COPERNICUS/S2_SR"),
    l7 = ee.ImageCollection("LANDSAT/LE07/C01/T1_SR"),
    dem = ee.Image("AU/GA/DEM_1SEC/v10/DEM-H"),
    mtpi = ee.Image("CSP/ERGo/1_0/Global/SRTM_mTPI"),
    flow_accum = ee.Image("WWF/HydroSHEDS/15ACC"),
    landforms = ee.Image("CSP/ERGo/1_0/Global/SRTM_landforms"),
    avhrr = ee.ImageCollection("NOAA/CDR/AVHRR/SR/V5"),
    myd_lst = ee.ImageCollection("MODIS/006/MYD11A1"),
    roi = 
    /* color: #b52416 */
    /* shown: false */
    /* displayProperties: [
      {
        "type": "rectangle"
      }
    ] */
    ee.Feature(
        ee.Geometry.Polygon(
            [[[150.4003652795294, -33.600426380121526],
              [150.4003652795294, -33.6495973671202],
              [150.44963209471496, -33.6495973671202],
              [150.44963209471496, -33.600426380121526]]], null, false),
        {
          "region": "Katoomba",
          "system:index": "0"
        }),
    firms = ee.ImageCollection("FIRMS"),
    ba = ee.ImageCollection("MODIS/006/MCD64A1"),
    mod13a1 = ee.ImageCollection("MODIS/006/MOD13A1"),
    mod09gq = ee.ImageCollection("MODIS/006/MOD09GQ"),
    myd13a1 = ee.ImageCollection("MODIS/006/MYD13A1"),
    vnp13a1 = ee.ImageCollection("NOAA/VIIRS/001/VNP13A1");
/***** End of imports. If edited, may not auto-convert in the playground. *****/
//**************************************************************************************************
//*** Options for seasonal aggegation ***
//**************************************************************************************************
var ic = l8; 
// var var_name = "endmember"
// var roi_name = "blue_mountains_1"
// var roi = blue_mountains_1
var export_scale = 30;
// var export_scale = ic.first().projection().nominalScale().toFloat();
var start_year = 2014; 
var end_year = 2019;
var start_date=ee.Date.fromYMD(start_year,01,01)
var end_date=ee.Date.fromYMD(end_year+1,01,01)
var months=ee.List([1,4,7,11]) // Central months of DJF season
var years=ee.List.sequence(start_year,end_year);

// var file_name = "Landsat8_"+var_name+"_"+roi_name+"_mean_"+"_"+start_year+"_"+end_year
// print(file_name)
// print(export_scale)

//*** MASK
var nvis = ee.Image("users/srifai/Oz/nvis5p1_majorVegClasses");
var nvis_mask = nvis.lte(18); 

//**********************************************************************
//*** FUNCTIONS ********************************************************
//**********************************************************************

// This example demonstrates the use of the Landsat 4, 5 or 7
// surface reflectance QA band to mask clouds.

var cloudMaskL457 = function(image) {
  var qa = image.select('pixel_qa');
  // If the cloud bit (5) is set and the cloud confidence (7) is high
  // or the cloud shadow bit is set (3), then it's a bad pixel.
  var cloud = qa.bitwiseAnd(1 << 5)
          .and(qa.bitwiseAnd(1 << 7))
          .or(qa.bitwiseAnd(1 << 3))
  // Remove edge pixels that don't occur in all bands
  var mask2 = image.mask().reduce(ee.Reducer.min());
  return image.updateMask(cloud.not()).updateMask(mask2).divide(10000);
};

// Function to cloud mask from the pixel_qa band of Landsat 8 SR data.
function maskL8sr(image) {
  // Bits 3 and 5 are cloud shadow and cloud, respectively.
  var cloudShadowBitMask = 1 << 3;
  var cloudsBitMask = 1 << 5;

  // Get the pixel QA band.
  var qa = image.select('pixel_qa');

  // Both flags should be set to zero, indicating clear conditions.
  var mask = qa.bitwiseAnd(cloudShadowBitMask).eq(0)
      .and(qa.bitwiseAnd(cloudsBitMask).eq(0));

  // Return the masked image, scaled to reflectance, without the QA bands.
  return image.updateMask(mask).divide(10000)
      .select("B[0-9]*")
      .copyProperties(image, ["system:time_start"]);
}

// Function to mask clouds using the Sentinel-2 QA band.
function maskS2clouds(image) {
  var qa = image.select('QA60');

  // Bits 10 and 11 are clouds and cirrus, respectively.
  var cloudBitMask = 1 << 10;
  var cirrusBitMask = 1 << 11;

  // Both flags should be set to zero, indicating clear conditions.
  var mask = qa.bitwiseAnd(cloudBitMask).eq(0).and(
             qa.bitwiseAnd(cirrusBitMask).eq(0));

  // Return the masked and scaled data, without the QA bands.
  return image.updateMask(mask).divide(10000)
      .select("B.*")
      .copyProperties(image, ["system:time_start"]);

  
}

function unmix_S2a(i){
  var GV =    [0.0639,	0.0698,	0.0544,	0.0884,	0.2002,	0.2395,	0.2486,	0.2648,	0.1256,	0.0631]
  var NPV =   [0.0982,	0.1242,	0.1684,	0.1982,	0.2192,	0.2413,	0.2684,	0.283,	0.5075,	0.3846]
  var Soil =  [0.1624,	0.2248,	0.2906,	0.328,	0.3404,	0.3616,	0.3614,	0.3741,	0.5055,	0.4203]
  var Shade = [0.0772,	0.0696,	0.057,	0.0535,	0.0499,	0.0498,	0.0435,	0.0445,	0.0284,	0.0205]
  var target = i.select(["B2","B3","B4","B5","B6","B7","B8","B8A","B11","B12"])
  var sma = target.unmix([NPV,GV,Soil,Shade], false, false)
                  .rename(["NPV","GV","Soil","Shade"])
                  
  var shadeMask = sma.select("Shade").lte(0.2); // 0.2 is arbitrary
  sma = sma.updateMask(shadeMask); 
  return(sma); 
}

function unmix_L8(i){
  //150.4698, -33.68304
  var GV =    [0.008299999870359898, 0.013199999928474426, 0.02810000069439411,
               0.02889999933540821, 0.24279999732971191, 0.10840000212192535, 0.04430000111460686]
  
  // // 150.19313, -32.32017 // BURNED!
  // var NPV =   [0.030300000682473183, 0.03359999880194664, 0.04230000078678131,
  //             0.053599998354911804, 0.08869999647140503, 0.19580000638961792,0.17630000412464142]

  // 150.552277, -33.736269
  var NPV =   [ 0.020800000056624413, 0.024900000542402267,  0.03530000150203705,
 0.04050000011920929, 0.13619999587535858,  0.19519999623298645, 0.11670000106096268]

  // 150.159611, -33.579042
  var Soil =  [0.08290000259876251, 0.10620000213384628,
                0.17870000004768372, 0.21879999339580536,  0.25540000200271606, 0.2978000044822693,
               0.20999999344348907]

  //151.16258, -33.51971
  var Shade = [0.019899999722838402, 0.02419999986886978, 0.03579999879002571, 0.040300000458955765,
                 0.013700000010430813, 0.0038999998942017555, 0.002300000051036477]
                 
                 
  var target = i.select(["B1","B2","B3","B4","B5","B6","B7"])
  var sma = target.unmix([NPV,GV,Shade], true,true)
                  .rename(["NPV","GV","Shade"])
  sma = sma.copyProperties(i, ["system:time_start"])                  
  // var shadeMask = sma.select("Shade").lte(0.2); // 0.2 is arbitrary
  // sma = sma.updateMask(shadeMask); 
  return(ee.Image(sma)); 
}

function getQABits(image, start, end, newName) {
    // Compute the bits we need to extract.
    var pattern = 0;
    for (var i = start; i <= end; i++) {
       pattern += Math.pow(2, i);
    }
    var out = image.select([0], [newName])
                  .bitwiseAnd(pattern)
                  .rightShift(start);
    return(image.addBands(out))
};

function qualityFlagMOD13(image){
  var qa = image.select('SummaryQA')
  qa = getQABits(image, 0,1,"VI").select("VI")
  var good = qa.select("VI").eq(0); 
  var i_out = image.updateMask(good); 
  return(i_out.addBands(qa)); 
}


function qualityFlag_MYD11A2(image) {
  var qa = getQABits(image.select('QC_Day'), 0,1,"good").eq(0);
  return image.updateMask(qa.select('good'));
}

function qualityFlag_MYD13A1(image){
  var qa = image.select('SummaryQA')
  qa = getQABits(image, 0,1,"VI").select("VI")
  var good = qa.select("VI").eq(0); 
  var i_out = image.updateMask(good); 
  return(i_out.addBands(qa)); 
  
}



//**********************************************************************
//*** END SECTION 
//**********************************************************************


// //**********************************************************************
// //*** VIIRS VI
// //**********************************************************************
// function qualityFlag_vnp13a1(image){
//   var qa = image.select('VI_Quality')
//   qa = getQABits(image, 0,1,"VI").select("VI")
//   var good = qa.select("VI").eq(0); 
//   var i_out = image.updateMask(good); 
//   return(i_out.addBands(qa)); 
  
// }

// var imagery = vnp13a1//.filterBounds(roi)
// roi = ee.FeatureCollection(roi)

// imagery = imagery.map(qualityFlag_vnp13a1)
// var blank = ee.ImageCollection(vnp13a1.first()); 
// imagery = ee.ImageCollection(blank.merge(imagery))


// var data = roi.map(function(feature) {
//   return imagery.map(function(image) {
//     return ee.Feature(feature.geometry().centroid(100), 
//         image.reduceRegion({
//           reducer: ee.Reducer.mean(),
//           geometry: feature.geometry(),
//           scale: 500
//         })).set({
//           time: image.date().millis(),
//           date: image.date().format()
//         }).copyProperties(feature);
//   })
// }).flatten();
// // print(data1.first().get('region'));
// var roi_name = ee.String(data.first().get('region')).getInfo()
// // print(roi_name)
// var fileNamePrefix = "VNP13A1"+"_"+roi_name;
// // print(fileNamePrefix)
// Export.table.toDrive(//collection, description, folder, fileNamePrefix, fileFormat, selectors)
// {
//   collection:data,
//   description:"VNP13A1",
//   folder:"Oz_misc_data",
//   fileNamePrefix:fileNamePrefix,
//   fileFormat:"csv"
// }
// )
// //**********************************************************************
// //*** END SECTION
// //**********************************************************************


// //**********************************************************************
// //*** MYD13A1
// //**********************************************************************
// var band = ['NDVI','EVI','sur_refl_b02']
// var imagery = myd13a1//.filterBounds(roi)
// roi = ee.FeatureCollection(roi)

// imagery = imagery.map(qualityFlag_MYD13A1)
// var blank = ee.ImageCollection(myd13a1.first()); 
// imagery = ee.ImageCollection(blank.merge(imagery))


// var data = roi.map(function(feature) {
//   return imagery.map(function(image) {
//     return ee.Feature(feature.geometry().centroid(100), 
//         image.select(band)
//             .rename(['NDVI','EVI','NIR'])
//             .multiply(0.0001)
//               .reduceRegion({
//           reducer: ee.Reducer.mean(),
//           geometry: feature.geometry(),
//           scale: 500
//         })).set({
//           time: image.date().millis(),
//           date: image.date().format()
//         }).copyProperties(feature);
//   })
// }).flatten();
// // print(data1.first().get('region'));
// var roi_name = ee.String(data.first().get('region')).getInfo()
// // print(roi_name)
// var fileNamePrefix = "MYD13A1"+"_"+roi_name;
// // print(fileNamePrefix)
// Export.table.toDrive(//collection, description, folder, fileNamePrefix, fileFormat, selectors)
// {
//   collection:data,
//   description:"MYD13A1",
//   folder:"Oz_misc_data",
//   fileNamePrefix:fileNamePrefix,
//   fileFormat:"csv"
// }
// )
// //**********************************************************************
// //*** END SECTION 
// //**********************************************************************

// //**********************************************************************
// //*** MOD13A1
// //**********************************************************************
// var band = ['NDVI','EVI','sur_refl_b02']
// var imagery = mod13a1
// roi = ee.FeatureCollection(roi)

// var data1 = roi.map(function(feature) {
//   return imagery.map(qualityFlagMOD13)
//                 .map(function(image) {
//     return ee.Feature(feature.geometry().centroid(100), 
//         image.select(band)
//             .rename(['NDVI','EVI','NIR'])
//             .multiply(0.0001)
//               .reduceRegion({
//           reducer: ee.Reducer.mean(),
//           geometry: feature.geometry(),
//           scale: 500
//         })).set({
//           time: image.date().millis(),
//           date: image.date().format()
//         }).copyProperties(feature);
//   })
// }).flatten();
// // print(data1.first().get('region'));
// var roi_name = ee.String(data1.first().get('region')).getInfo()
// // print(roi_name)
// var fileNamePrefix = "MOD13A1"+"_"+roi_name;
// // print(fileNamePrefix)
// // Export.table.toDrive(//collection, description, folder, fileNamePrefix, fileFormat, selectors)
// // {
// //   collection:data1,
// //   description:"MOD13A1",
// //   folder:"Oz_misc_data",
// //   fileNamePrefix:fileNamePrefix,
// //   fileFormat:"csv"
// // }
// // )
// //**********************************************************************
// //*** END SECTION 
// //**********************************************************************


// //**********************************************************************
// //*** MYD LST
// //**********************************************************************
// var band = ['LST_Day_1km']
// var imagery = myd_lst.filterBounds(roi)
// roi = ee.FeatureCollection(roi)

// imagery = imagery.map(qualityFlag_MYD11A2)
// var blank = ee.ImageCollection(myd_lst.first()); 
// imagery = ee.ImageCollection(blank.merge(imagery))

// var data2 = roi.map(function(feature) {
//   return imagery.map(function(image) {
//     return ee.Feature(feature.geometry().centroid(100), 
//         image.select(band)
//             .rename(['LST'])
//             .multiply(0.02).subtract(271.15)
//               .reduceRegion({
//           reducer: ee.Reducer.mean(),
//           geometry: feature.geometry(),
//           scale: 500
//         })).set({
//           time: image.date().millis(),
//           date: image.date().format()
//         }).copyProperties(feature);
//   })
// }).flatten();
// // print("MYD_LST", data2.first());
// // var roi_name = ee.String(data2.first().get('region')).getInfo()
// // print(roi_name)
// // var fileNamePrefix = "MYD11A1"+"_mean_"+roi_name;
// // print(fileNamePrefix)
// // Export.table.toDrive(//collection, description, folder, fileNamePrefix, fileFormat, selectors)
// // {
// //   collection:data2,
// //   description:"MYD11A2",
// //   folder:"Oz_misc_data",
// //   fileNamePrefix:fileNamePrefix,
// //   fileFormat:"csv"
// // }
// // )
// //**********************************************************************
// //*** END SECTION 
// //**********************************************************************

//**********************************************************************
//*** AVHRR
//**********************************************************************
function qualityFlag_avhrr(image) {
  var qa = image.select('QA');
  
  // Select bits
  var cloudBitMask = Math.pow(2, 1);
  var shadowBitMask = Math.pow(2, 2);
  var brdfBitMask = Math.pow(2, 14);
  var ch_1_5_BitMask = Math.pow(2, 7);
  
  // 
  var mask = qa.bitwiseAnd(cloudBitMask).eq(0)
            .and(
              qa.bitwiseAnd(shadowBitMask).eq(0))
              // .and(
              // qa.bitwiseAnd(ch_1_5_BitMask).eq(0));
  // var mask_2 = qa.bitwiseAnd(ch_1_5_BitMask).neq(0)

  var time_mask = image.select('TIMEOFDAY').multiply(0.01).add(10).lte(18)

  image = image.updateMask(mask);
  image = image.updateMask(time_mask); 


  // image = image.updateMask(mask_2); 
  // image = image.updateMask(brdfBitMask.eq(0))
  image = image.addBands([qa.bitwiseAnd(cloudBitMask).eq(0).rename("cloud"), 
                          qa.bitwiseAnd(shadowBitMask).eq(0).rename("shadow"), 
                          qa.bitwiseAnd(brdfBitMask).eq(0).rename("brdf"), 
                          qa.bitwiseAnd(ch_1_5_BitMask).eq(0).rename("ch_1_5")])

  // Return the masked data.
  return(image); 
  // return(qa.bitwiseAnd(brdfBitMask).eq(0));
}

function calc_nirv_avhrr(img){
  var b = img.select(['SREFL_CH1','SREFL_CH2'],['Red','NIR'])
            .multiply(0.0001);
  var nirv = b.normalizedDifference(['NIR','Red']).multiply(b.select('NIR'))
              .rename("NIRV")
  b = b.normalizedDifference(['NIR','Red']).rename("NDVI")
  var out = img.addBands(nirv).addBands(b);
  return(out)
}


var band = ['NDVI',"NIRV"]
avhrr = avhrr//.filterBounds(roi)
            // .filterDate("2001-01-01","2001-01-31")
var imagery = avhrr

roi = ee.FeatureCollection(roi)


imagery = imagery.filterBounds(roi)
                .map(qualityFlag_avhrr)
print('avhrr', imagery.first())

var blank = ee.ImageCollection(avhrr.first().unmask()); 
imagery = ee.ImageCollection(blank.merge(imagery))

var data = roi.map(function(feature) {
  return imagery//.map(calc_nirv_avhrr)
                .map(function(image) {
    return ee.Feature(feature.geometry().centroid(100), 
        image//.select(band)
              .reduceRegion({
          reducer: ee.Reducer.first(),
          geometry: feature.geometry(),
          scale: 5000
        })).set({
          time: image.date().millis(),
          date: image.date().format()
        }).copyProperties(feature);
  })
}).flatten();
print('avhrr', data);
var roi_name = ee.String(data.first().get('region')).getInfo()
print(roi_name)
var fileNamePrefix = "AVHRR_NIRV_"+"_mean_"+roi_name;
print(fileNamePrefix)
Export.table.toDrive(//collection, description, folder, fileNamePrefix, fileFormat, selectors)
{
  collection:data,
  description:"AVHRR_NIRV",
  folder:"Oz_misc_data",
  fileNamePrefix:fileNamePrefix,
  fileFormat:"csv"
}
)

// // Create an image time series chart.
// var chart = ui.Chart.feature.byProperty(data,'date','NDVI')
//                         .setChartType('ScatterChart')


// // Add the chart to the map.
// chart.style().set({
//   position: 'bottom-right',
//   width: '700px',
//   height: '300px'
// });
// Map.add(chart);

//**********************************************************************
//*** END SECTION 
//**********************************************************************


// //**********************************************************************
// //*** Landsat 5 SMA 
// //**********************************************************************
// /**
// * Function to mask clouds based on the pixel_qa band of Landsat SR data.
// * @param {ee.Image} image Input Landsat SR image
// * @return {ee.Image} Cloudmasked Landsat image
// */
// var cloudMaskL457 = function(image) {
//   var qa = image.select('pixel_qa');
//   // If the cloud bit (5) is set and the cloud confidence (7) is high
//   // or the cloud shadow bit is set (3), then it's a bad pixel.
//   var cloud = qa.bitwiseAnd(1 << 5)
//                   .and(qa.bitwiseAnd(1 << 7))
//                   .or(qa.bitwiseAnd(1 << 3));
//   // Remove edge pixels that don't occur in all bands
//   var mask2 = image.mask().reduce(ee.Reducer.min());
//   return image.updateMask(cloud.not()).updateMask(mask2);
// };

// var apply_sma = function(image){
//           var gv = [0.013300000000000001,
//         0.0262,
//         0.028200000000000003,
//         0.1938,
//         0.0959,
//         0.050300000000000004]
        
//         var npv = [0.045200000000000004,
//         0.07640000000000001,
//         0.08310000000000001,
//         0.1454,
//         0.26080000000000003,
//         0.1812
//           ]
        
//         var shade = [0.016900000000000002,
//         0.028,
//         0.0182,
//         0.0175,
//         0.0088,
//         0.0091
//           ]
        
//         var soil = [
//         0.1332,
//         0.19940000000000002,
//         0.2341,
//         0.37,
//         0.4713,
//         0.35350000000000004
//         ]
        
//   var out = image.unmix([ npv, gv, shade],true,true);
//   out = out.rename(["NPV","GV", "Shade"])
//   out = out.copyProperties(image, ["system:time_start"])
//   return(out); 
// }

// var band = ['NPV','GV','Shade']

// var imagery = ee.ImageCollection('LANDSAT/LT05/C01/T1_SR')
//                   // .filterDate('2011-01-01', '2011-12-31')
//                   .filterBounds(roi)
//                   .map(cloudMaskL457)
//                   .map(function(i){
//                     return(i.select(["B1","B2","B3","B4","B5","B7"])
//                             .multiply(0.0001)
//                             .copyProperties(i, ["system:time_start"])
//                           )
//                   }) 
//                   .map(apply_sma)

// // Append an unmasked image to start the collection to initizalize the reducer column
// var blank = ee.ImageCollection('LANDSAT/LT05/C01/T1_SR')
//                   .filterBounds(roi)
//                   .map(function(i){
//                     return(i.select(["B1","B2","B3","B4","B5","B7"])
//                             .multiply(0.0001)
//                             .copyProperties(i, ["system:time_start"])
//                           )
//                   }) 
//                   .map(apply_sma)
//                   .first()
// blank = ee.ImageCollection(blank)
// imagery = ee.ImageCollection(blank.merge(imagery))



// var data4 = roi.map(function(feature) {
//   return imagery.map(function(image) {
//     return ee.Feature(feature.geometry().centroid(100), 
//         image.select(band)
//               .reduceRegion({
//           reducer: ee.Reducer.mean(),
//           geometry: feature.geometry(),
//           scale: 500
//         })).set({
//           time: image.date().millis(),
//           date: image.date().format()
//         }).copyProperties(feature);
//   })
// }).flatten();
// // print(data4.first().get('region'));
// // var roi_name = ee.String(data4.first().get('region')).getInfo()
// // print(roi_name)
// // var fileNamePrefix = "Landsat5_SMA_"+"_mean_"+roi_name;
// // print(fileNamePrefix)
// // Export.table.toDrive(//collection, description, folder, fileNamePrefix, fileFormat, selectors)
// // {
// //   collection:data4,
// //   description:"LANDSAT5_SMA",
// //   folder:"Oz_misc_data",
// //   fileNamePrefix:fileNamePrefix,
// //   fileFormat:"csv"
// // }
// // )

// //**********************************************************************
// //*** END SECTION 
// //**********************************************************************


// //**********************************************************************
// //*** Landsat 7 SMA 
// //**********************************************************************
// /**
// * Function to mask clouds based on the pixel_qa band of Landsat SR data.
// * @param {ee.Image} image Input Landsat SR image
// * @return {ee.Image} Cloudmasked Landsat image
// */
// var cloudMaskL457 = function(image) {
//   var qa = image.select('pixel_qa');
//   // If the cloud bit (5) is set and the cloud confidence (7) is high
//   // or the cloud shadow bit is set (3), then it's a bad pixel.
//   var cloud = qa.bitwiseAnd(1 << 5)
//                   .and(qa.bitwiseAnd(1 << 7))
//                   .or(qa.bitwiseAnd(1 << 3));
//   // Remove edge pixels that don't occur in all bands
//   var mask2 = image.mask().reduce(ee.Reducer.min());
//   return image.updateMask(cloud.not()).updateMask(mask2);
// };

// var apply_sma = function(image){
//           var gv = [0.013300000000000001,
//         0.0262,
//         0.028200000000000003,
//         0.1938,
//         0.0959,
//         0.050300000000000004]
        
//         var npv = [0.045200000000000004,
//         0.07640000000000001,
//         0.08310000000000001,
//         0.1454,
//         0.26080000000000003,
//         0.1812
//           ]
        
//         var shade = [0.016900000000000002,
//         0.028,
//         0.0182,
//         0.0175,
//         0.0088,
//         0.0091
//           ]
        
//         var soil = [
//         0.1332,
//         0.19940000000000002,
//         0.2341,
//         0.37,
//         0.4713,
//         0.35350000000000004
//         ]
        
//   var out = image.unmix([ npv, gv, shade],true,true);
//   out = out.rename(["NPV","GV", "Shade"])
//   out = out.copyProperties(image, ["system:time_start"])
//   return(out); 
// }

// var band = ['NPV','GV','Shade']

// var imagery = ee.ImageCollection('LANDSAT/LE07/C01/T1_SR')
//                   // .filterDate('2011-01-01', '2011-12-31')
//                   .filterBounds(roi)
//                   .map(cloudMaskL457)
//                   .map(function(i){
//                     return(i.select(["B1","B2","B3","B4","B5","B7"])
//                             .multiply(0.0001)
//                             .copyProperties(i, ["system:time_start"])
//                           )
//                   }) 
//                   .map(apply_sma)

// // Append an unmasked image to start the collection to initizalize the reducer column
// var blank = ee.ImageCollection('LANDSAT/LE07/C01/T1_SR')
//                   .filterBounds(roi)
//                   .map(function(i){
//                     return(i.select(["B1","B2","B3","B4","B5","B7"])
//                             .multiply(0.0001)
//                             .copyProperties(i, ["system:time_start"])
//                           )
//                   }) 
//                   .map(apply_sma)
//                   .first()
// blank = ee.ImageCollection(blank)
// imagery = ee.ImageCollection(blank.merge(imagery))



// var data4 = roi.map(function(feature) {
//   return imagery.map(function(image) {
//     return ee.Feature(feature.geometry().centroid(100), 
//         image.select(band)
//               .reduceRegion({
//           reducer: ee.Reducer.mean(),
//           geometry: feature.geometry(),
//           scale: 500
//         })).set({
//           time: image.date().millis(),
//           date: image.date().format()
//         }).copyProperties(feature);
//   })
// }).flatten();
// // print(data4.first().get('region'));
// // var roi_name = ee.String(data4.first().get('region')).getInfo()
// // print(roi_name)
// // var fileNamePrefix = "Landsat7_SMA_"+"_mean_"+roi_name;
// // print(fileNamePrefix)
// // Export.table.toDrive(//collection, description, folder, fileNamePrefix, fileFormat, selectors)
// // {
// //   collection:data4,
// //   description:"LANDSAT7_SMA",
// //   folder:"Oz_misc_data",
// //   fileNamePrefix:fileNamePrefix,
// //   fileFormat:"csv"
// // }
// // )

// //**********************************************************************
// //*** END SECTION 
// //**********************************************************************

// //**********************************************************************
// //*** Landsat 8 
// //**********************************************************************


// var imagery = ee.ImageCollection('LANDSAT/LC08/C01/T1_SR')
//                   .filterBounds(roi)
//                   .map(maskL8sr)
//                   .map(function(i){
//                     return(i.select(["B1","B2","B3","B4","B5","B6","B7"])
//                             .copyProperties(i, ["system:time_start"])
//                           )
//                   }) 
//                   .map(unmix_L8)

// // Append an unmasked image to start the collection to initizalize the reducer column
// var blank = ee.ImageCollection('LANDSAT/LC08/C01/T1_SR')
//                   .filterBounds(roi)
//                   .map(function(i){
//                     return(i.select(["B1","B2","B3","B4","B5","B6","B7"])
//                             .copyProperties(i, ["system:time_start"])
//                           )
//                   }) 
//                   .map(unmix_L8)
//                   .first()
// blank = ee.ImageCollection(blank)
// imagery = ee.ImageCollection(blank.merge(imagery))

// var data4 = roi.map(function(feature) {
//   return imagery.map(function(image) {
//     return ee.Feature(feature.geometry().centroid(100), 
//         image.select(band)
//               .reduceRegion({
//           reducer: ee.Reducer.mean(),
//           geometry: feature.geometry(),
//           scale: 500
//         })).set({
//           time: image.date().millis(),
//           date: image.date().format()
//         }).copyProperties(feature);
//   })
// }).flatten();
// // print(data4.first().get('region'));
// // var roi_name = ee.String(data4.first().get('region')).getInfo()
// // print(roi_name)
// // var fileNamePrefix = "Landsat8_SMA_"+"_mean_"+roi_name;
// // print(fileNamePrefix)
// // Export.table.toDrive(//collection, description, folder, fileNamePrefix, fileFormat, selectors)
// // {
// //   collection:data4,
// //   description:"LANDSAT8_SMA",
// //   folder:"Oz_misc_data",
// //   fileNamePrefix:fileNamePrefix,
// //   fileFormat:"csv"
// // }
// // )


// //**********************************************************************
// //*** MCD64
// //**********************************************************************
// var band = ['BurnDate']
// var imagery = ba
// roi = ee.FeatureCollection(roi)

// var blank = ee.ImageCollection(ba.first().unmask()); 
// imagery = ee.ImageCollection(blank.merge(imagery))

// var data2 = roi.map(function(feature) {
//   return imagery.map(function(image) {
//     return ee.Feature(feature.geometry().centroid(100), 
//         image.select(band)
//             .gte(1).multiply(ee.Image.pixelArea())
//             .rename('burnAreaM2')
//               .reduceRegion({
//           reducer: ee.Reducer.sum(),
//           geometry: feature.geometry(),
//           scale: 500
//         })).set({
//           time: image.date().millis(),
//           date: image.date().format()
//         }).copyProperties(feature);
//   })
// }).flatten();
// // print("MCD64", data2.first());
// // var roi_name = ee.String(data2.first().get('region')).getInfo()
// // // print(roi_name)
// // var fileNamePrefix = "MCD64"+"_sum_"+roi_name;
// // // print(fileNamePrefix)
// // Export.table.toDrive(//collection, description, folder, fileNamePrefix, fileFormat, selectors)
// // {
// //   collection:data2,
// //   description:"MCD64",
// //   folder:"Oz_misc_data",
// //   fileNamePrefix:fileNamePrefix,
// //   fileFormat:"csv"
// // }
// // )
// //**********************************************************************
// //*** END SECTION 
// //**********************************************************************

// //**********************************************************************
// //*** FIRMS
// //**********************************************************************
// var band = ['T21']
// var imagery = firms
// roi = ee.FeatureCollection(roi)

// var blank = ee.ImageCollection(firms.first().unmask()); 
// imagery = ee.ImageCollection(blank.merge(imagery))

// var data2 = roi.map(function(feature) {
//   return imagery.map(function(image) {
//     return ee.Feature(feature.geometry().centroid(100), 
//         image.select(band)
//             .gte(300).multiply(ee.Image.pixelArea())
//             .rename('thermalAnomaly')
//               .reduceRegion({
//           reducer: ee.Reducer.sum(),
//           geometry: feature.geometry(),
//           scale: 500
//         })).set({
//           time: image.date().millis(),
//           date: image.date().format()
//         }).copyProperties(feature);
//   })
// }).flatten();
// // print("FIRMS", data2.first());
// // var roi_name = ee.String(data2.first().get('region')).getInfo()
// // print(roi_name)
// // var fileNamePrefix = "FIRMS"+"_sum_"+roi_name;
// // print(fileNamePrefix)
// // Export.table.toDrive(//collection, description, folder, fileNamePrefix, fileFormat, selectors)
// // {
// //   collection:data2,
// //   description:"FIRMS",
// //   folder:"Oz_misc_data",
// //   fileNamePrefix:fileNamePrefix,
// //   fileFormat:"csv"
// // }
// // )
// //**********************************************************************
// //*** END SECTION 
// //**********************************************************************


// //**********************************************************************
// // MOD09GQ
// //**********************************************************************
// function qualityFlagMOD09GQ(image){
//   var qa = image.select('QC_250m')
//   qa = getQABits(qa, 0,1,"VI").select("VI").rename("VI")
//   var good = qa.select("VI").eq(0); 
//   var i_out = image.updateMask(good); 
//   // return(i_out); 
//   return(i_out.addBands(qa))
// }

// function calc_nirv_mod09(img){
//   var b = img.select(['sur_refl_b01','sur_refl_b02'],['Red','NIR'])
//             .multiply(0.0001);
//   var nirv = b.normalizedDifference(['NIR','Red']).multiply(b.select('NIR'))
//               .rename("NIRV")
//   b = b.normalizedDifference(['NIR','Red']).rename("NDVI")
//   var out = img.addBands(nirv).addBands(b);
//   return(out)
// }


// var band = ['sur_refl_b01','sur_refl_b02']
// var imagery = mod09gq//.filterDate("2001-01-01","2001-01-15")
//                     .map(qualityFlagMOD09GQ)
// roi = ee.FeatureCollection(roi)

// var blank = mod09gq.filterDate("2000-03-01","2000-03-31").mean()
// var first_im = mod09gq.filterDate("2000-03-01","2000-03-31").first()
// blank = ee.Image(blank).addBands(ee.Image(-999).rename("VI")); 
// first_im = ee.Image(first_im)
// blank = blank.copyProperties(first_im,["system:time_start"])
// blank = ee.ImageCollection([blank,blank])
// imagery = ee.ImageCollection(blank.merge(imagery))
// print(imagery)

// var joint_reducer = ee.Reducer.mean().combine(ee.Reducer.count(),null,true)
//                                     .combine(ee.Reducer.stdDev(), null, true)

// var data = roi.map(function(feature) {
//   return imagery.map(calc_nirv_mod09)
//                 .map(function(image) {
//     return ee.Feature(feature.geometry().centroid(100), 
//         image.reduceRegion({
//           reducer: joint_reducer,
//           geometry: feature.geometry(),
//           scale: 500
//         })).set({
//           time: image.date().millis(),
//           date: image.date().format()
//         }).copyProperties(feature);
//   })
// }).flatten();
// print(data);
// var roi_name = ee.String(data.first().get('region')).getInfo()
// print(roi_name)
// var fileNamePrefix = "MOD09GQ"+"_"+roi_name;
// print(fileNamePrefix)
// Export.table.toDrive(//collection, description, folder, fileNamePrefix, fileFormat, selectors)
// {
//   collection:data,
//   description:"MOD09GQ",
//   folder:"Oz_misc_data",
//   fileNamePrefix:fileNamePrefix,
//   fileFormat:"csv"
// })

// //**********************************************************************
// //*** END SECTION 
// //**********************************************************************
