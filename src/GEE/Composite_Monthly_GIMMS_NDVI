/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var mod_ba = ee.ImageCollection("MODIS/006/MCD64A1"),
    nvis = ee.Image("users/srifai/Oz/nvis5p1_majorVegClasses"),
    mod_vi = ee.ImageCollection("MODIS/006/MOD13A2"),
    myd13a2 = ee.ImageCollection("MODIS/006/MYD13A2"),
    mod13a2 = ee.ImageCollection("MODIS/006/MOD13A2"),
    mcd43a4 = ee.ImageCollection("MODIS/006/MCD43A4"),
    mcd43a2 = ee.ImageCollection("MODIS/006/MCD43A2"),
    roi_se_vic = 
    /* color: #d63000 */
    /* shown: false */
    /* displayProperties: [
      {
        "type": "rectangle"
      }
    ] */
    ee.Geometry.Polygon(
        [[[147.72624179419688, -36.851631153177266],
          [147.72624179419688, -37.86024466689231],
          [150.0828091770094, -37.86024466689231],
          [150.0828091770094, -36.851631153177266]]], null, false),
    mcd15 = ee.ImageCollection("MODIS/006/MCD15A3H"),
    mod15 = ee.ImageCollection("MODIS/006/MOD15A2H"),
    cdr = ee.ImageCollection("NOAA/CDR/AVHRR/LAI_FAPAR/V5"),
    gimms = ee.ImageCollection("NASA/GIMMS/3GV0");
/***** End of imports. If edited, may not auto-convert in the playground. *****/
var scale_m = 5000; // 500m(native) to 5000(analysis)
var roi_name = "EastOz"   //   "SE_Vic"
var start_year = 1981; 
var end_year = 2013; 
var min_date = "1981-07-01" // Look for product start date
var max_date = "2013-12-31" // Look for product end date
var fire_buffer_years = 3
var var_name = 'ndvi'
var years = ee.List.sequence(start_year,end_year,1); 
var months = ee.List.sequence(1,12,1); 
// var dates = ee.List.sequence(ee.Date.fromYMD(years[0],months[0],1))
// Map.addLayer(nvis.lte(15),{palette:['yellow','green'],min:0,max:1})

var roi = ee.Geometry.Rectangle([136, -44, 154, -11])
roi = roi.buffer(50000)

var nvis = ee.Image("users/srifai/Oz/nvis5p1_majorVegClasses");
var nvis_mask = nvis.lte(12).add(nvis.eq(22)).add(nvis.eq(24)).gte(1)

// band 1: red, band 2: nir (841-876 nm)


//***************************************************************************
//*** FUNCTIONS 
//***************************************************************************
var getQABits = function(image, start, end, newName) {
    // Compute the bits we need to extract.
    var pattern = 0;
    for (var i = start; i <= end; i++) {
       pattern += Math.pow(2, i);
    }
    var out = image.select([0], [newName])
                  .bitwiseAnd(pattern)
                  .rightShift(start);
    return(image.addBands(out))
};

function qa_gimms(image){
  var good = getQABits(image.select("qa"),0,2,'good')
  good = good.lte(2)
  var out = image.updateMask(good); 
  return(out)
}

print(gimms)
Map.addLayer(qa_gimms(ee.Image(gimms.first())),{min:0,max:0.9})

function qualityFlagCDR_FAPAR(image){
  var qa = image.select('QA')
  qa = getQABits(image, 0,1,"VI")
  var good = qa.select("VI").eq(0); 
  var i_out = image.updateMask(good); 
  return(i_out); 
}

function qualityFlagMYD13(image){
  var qa = image.select('SummaryQA')
  qa = getQABits(image, 0,1,"VI")
  var good = qa.select("VI").eq(0); 
  var i_out = image.updateMask(good); 
  return(i_out); 
}

function qualityFlagMCD15(image){
  var qa = image.select('FparLai_QC')
  qa = getQABits(image, 0,1,"VI")
  var good = qa.select("VI").eq(0); 
  var i_out = image.updateMask(good); 
  return(i_out); 
}

function scaleBands(image){
 var fpar = image.select("FAPAR").rename('fpar').multiply(0.001)
 image = image.addBands(fpar);
 return(image)
}

var getQABits = function(image, start, end, newName) {
    // Compute the bits we need to extract.
    var pattern = 0;
    for (var i = start; i <= end; i++) {
       pattern += Math.pow(2, i);
    }
    var out = image.select([0], [newName])
                  .bitwiseAnd(pattern)
                  .rightShift(start);
    return(image.addBands(out))
};

// function qa_flag_mcd(image){
//   var qa_red = getQABits(image.select("BRDF_Albedo_Band_Quality_Band1"),0,2,'valid_red')
//                         .select('valid_red').eq(0);
//   var qa_nir = getQABits(image.select("BRDF_Albedo_Band_Quality_Band2"),0,2,'valid_nir')
//                         .select('valid_nir').eq(0);
//   var good = qa_red.add(qa_nir)
//   good = good.lte(0);
//   var out = image.updateMask(good).select(['red','nir']).multiply(0.0001); 
//   return(out)
// }

// // *** OLD ***
// function mask_deforestation(i){
//   // Mask deforestation between 2000-2018
//   var gfc = ee.Image("UMD/hansen/global_forest_change_2019_v1_7")
//   var focal_year = i.date().get('year')
//   var base_mask = gfc.expression(
//   "(lossyear == focal_year) || (focal_year == (lossyear+1)) || (focal_year == (lossyear+2))",{
//       'loss':gfc.select("loss"),
//       'lossyear':gfc.select("lossyear").add(2000),
//       'focal_year':focal_year
//     }).neq(1)
//   var out = i.updateMask(base_mask)
//   return(out); 
// }

// function mask_deforestation(i){
// // Creates a deforestation mask deforestation starting 1 year prior to the focal year of the image (i)
//   var gfc = ee.Image("UMD/hansen/global_forest_change_2019_v1_7")
//   var forest = gfc.select("treecover2000") //.gte(tree_cover); 
//   var focal_year = i.date().get('year').subtract(1)
//   var prior_deforestation = gfc.expression(
//   "(loss == 1) && (lossyear <= focal_year)",{
//       'loss':gfc.select("loss"),
//       'lossyear':gfc.select("lossyear").add(2000),
//       'focal_year':focal_year
//     })
//   // var out = forest.subtract(prior_deforestation.unmask())
//   return(prior_deforestation); 
// }

function mask_deforestation(i){
// Creates a deforestation mask deforestation starting 1 year prior to the focal year of the image (i)
  var gfc = ee.Image("UMD/hansen/global_forest_change_2019_v1_7")
  var forest = gfc.select("treecover2000") //.gte(tree_cover); 
  var focal_year = i.date().get('year')
  var prior_deforestation = gfc.expression(
  "(loss == 1) && (lossyear <= focal_year)",{
      'loss':gfc.select("loss").unmask(),
      'lossyear':gfc.select("lossyear").unmask().add(2000).subtract(0),
      'focal_year':focal_year
    })
  // var out = forest.subtract(prior_deforestation.unmask())
  prior_deforestation = prior_deforestation.neq(1)
  return(prior_deforestation); 
}

//***************************************************************************
//*** END SECTION 
//***************************************************************************


//***************************************************************************
//*** MAIN
//***************************************************************************
// Cast dates to list and filter to min/max
var dates = years.map(function(y){
  return(months.map(function(m){
    return(ee.Date.fromYMD(y,m,1))
  }))
})
dates = dates.flatten()
dates = dates.filter(ee.Filter.lessThan('item',ee.Date(max_date)))
dates = dates.filter(ee.Filter.greaterThan('item',ee.Date(min_date)))


var test = ee.ImageCollection.fromImages(dates.map(function(d){
  var date_focal = ee.Date(d)
  var date1 = ee.Date(d).advance(-fire_buffer_years,'year'); 
  // var date2 = ee.Date(d)
  // var bin_burn = mod_ba.filterDate(date1,date_focal)
  //           .map(function(i){
  //             var out2 = i.select("BurnDate")
  //                         .gte(1)
  //             return(out2); 
  //           })
  //           .max()
  //                     // .select("BurnDate")
  //                     // .max()
  //                     // .gte(1)
  // bin_burn = ee.Image(bin_burn).unmask().eq(0)                     


  
  
  var dateFilter = ee.Filter.date(date_focal, date_focal.advance(1,'month'));
  var im_dict = ee.ImageCollection("NASA/GIMMS/3GV0")
                  .filter(dateFilter)
                  .first()
  
  // Create deforestation mask 
  // var bin_deforestation = mask_deforestation(im_dict); 

  // Load a AVHRR collection with fapar data.
  var out = ee.ImageCollection("NASA/GIMMS/3GV0")
      .filter(dateFilter)
      .map(qa_gimms)
      .mean()
      .select("ndvi")


  out = ee.Image(out)//.addBands(bin_burn.rename("burn_mask"))
  
  // out = out.updateMask(bin_deforestation)
  // out = out.updateMask(bin_burn)
  
  // out = out.set('system:time_start', ee.Date(date_focal));
  // out = out.set('system:time_end', ee.Date(date_focal).advance(28,'days'));
  out = out.copyProperties(im_dict,["system:index"])
  out = out.copyProperties(im_dict,["system:time_start"])
  out = out.copyProperties(im_dict,["system:time_end"])
  return(out)
}).flatten()); 
//***************************************************************************
//*** END SECTION
//***************************************************************************

//***************************************************************************
//*** EXPORT
//***************************************************************************
// var multiband = ee.Image().select()
// var multiband = ee.Image(test.iterate(function(image, result) {
//   return ee.Image(result).addBands(image)
// }, multiband))
var multiband = test.toBands()



// //* DEBUGGING **********************************************************************************************
// var test_im = mod15.filterDate('2019-01-01','2019-01-09').first()
// test_im = ee.Image(test_im)
// var test_mask = mask_deforestation(test_im)
// Map.addLayer(test_mask,{min:0,max:1,palette:['black','purple']},'test_mask',false)
Map.addLayer(ee.Image("UMD/hansen/global_forest_change_2019_v1_7"),
  {bands:['lossyear'],min:0,max:19,palette:['black','purple','red','orange','yellow','white']},
  'gfc',false)
// // var gfc = ee.Image("UMD/hansen/global_forest_change_2018_v1_6")  
// // var lossyear = gfc.select('lossyear').add(2000)
// // lossyear = lossyear.multiply(gfc.select('loss'))
// // Map.addLayer(lossyear, {min:2000,max:2019},'lossyear')
// // Map.addLayer(nvis,null,'nvis',false)
Map.addLayer(test.first(),{min:0,max:1},'test',false)
// Map.setCenter(152.28582, -29.53725,14)// Gibraltar Range
// //***********************************************************************************************************



Export.image.toDrive(
  // image, description, folder, fileNamePrefix, dimensions, region, scale, crs, crsTransform, maxPixels, shardSize, fileDimensions, skipEmptyTiles, fileFormat, formatOptions
  {image:multiband, 
  description:var_name+"_"+start_year+"_"+end_year,
  folder:"Oz_misc_data", 
  fileNamePrefix:"GIMMS_"+var_name+"_"+scale_m+"m_"+roi_name+"_"+start_year+"_"+end_year,
  region:roi,
  scale:scale_m,
  crs:"EPSG:4326", 
  maxPixels:500000000
  })

//***************************************************************************
//*** END SECTION
//***************************************************************************




// Map.addLayer(test,{palette:['black','red']},'bin_burn')
// Map.addLayer(test,{palette:['black','green'],
//   bands:["nirv"]
// },'nirv'); 
// Map.addLayer(test,{palette:['red','black'],
//   bands:["burn_mask"]
// },'burn_mask'); 

// Map.addLayer(mod_ba.filterDate("2014-01-01","2019-12-31"),
// {bands:['BurnDate']},
// 'mod_ba')